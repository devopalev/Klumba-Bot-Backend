import logging
import re

from telegram import InlineKeyboardButton

import source.bitrix.BitrixWorker as BW

logger = logging.getLogger(__name__)


class Deal:
    # deal stages
    class FilMapStage:
        NEW = 'C17:2'  # –ù–æ–≤—ã–π –∑–∞–∫–∞–∑
        IN_PROCESS = 'C17:4'  # –í –æ–±—Ä–∞–±–æ—Ç–∫–µ \ –ù–∞–¥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
        PAID_PREPAID = 'C17:UC_J0R30S'  # –û–ø–ª–∞—á–µ–Ω \ –ü—Ä–µ–¥–æ–ø–ª–∞—á–µ–Ω
        PROCESSED_WAITING_FOR_SUPPLY = 'C17:13'  # –û–±—Ä–∞–±–æ—Ç–∞–Ω, –Ω–æ –∂–¥–µ—Ç –ø–æ—Å—Ç–∞–≤–∫–∏
        PROCESSED_ON_HOLD = 'C17:6'  # –û–±—Ä–∞–±–æ—Ç–∞–Ω,—Ç–æ–≤.–æ—Ç–ª–æ–∂/–Ω–µ —Ç—Ä–µ–±.
        PRINTED = 'C17:UC_EQMV7Y'  # –†–∞—Å–ø–µ—á–∞—Ç–∞–Ω
        FLORIST = 'C17:7'  # –£ –§–ª–æ—Ä–∏—Å—Ç–∞ (–ò–∑–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è)
        PROCESSED_1C = 'C17:8'  # –û–±—Ä–∞–±–æ—Ç–∞–Ω –≤ 1–°
        IS_EQUIPPED = 'C17:NEW'  # –ó–∞–∫–∞–∑ —É–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞–Ω
        UNAPPROVED = 'C17:9'  # –ù–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ
        APPROVED = 'C17:10'  # –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ
        IS_IN_DELIVERY = 'C17:FINAL_INVOICE'  # –í –¥–æ—Å—Ç–∞–≤–∫–µ
        SUCCESSFUL = 'C17:WON'  # –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–∞
        LOSE = 'C17:LOSE'  # –£–¥–∞–ª–µ–Ω \ –ü—Ä–æ–≤–∞–ª–µ–Ω
        LIST_REFERENCE_ID = 'DEAL_STAGE_17'  # –°—Ç–∞–¥–∏–∏ –ø–æ –ë–∞–∑–µ –ó–∞–∫–∞–∑–æ–≤ (–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 17)

    class FilMapPostcardStage:
        DEAL_HAS_POSTCARD_YES = '2543'  # –ï—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç–∫–∞

    class FilMapPay:
        # –û–ø–ª–∞—Ç–∞
        PAY_PREPAID_FRIENDLY = '–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞'
        PAY_PERSONAL_FRIENDLY = '–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏'
        PAY_TERMINAL_FRIENDLY = '–¢–µ—Ä–º–∏–Ω–∞–ª'
        PAY_CHANGE_FRIENDLY = '–°–¥–∞—á–∞ —Å:'
        NEED_TERMINAL = '2331'
        NEED_CHANGE = '2333'

    class FilMapReserve:
        # –ï—Å—Ç—å —Ä–µ–∑–µ—Ä–≤
        RESERVE_YES = '2551'
        DEAL_HAS_RESERVE_YES_FRIENDLY = '–î–∞'
        DEAL_HAS_RESERVE_NO = '2553'

    class FilMapFestive:
        APPROVEMENT_YES = '2891'
        APPROVEMENT_NO = '2893'
        APPROVEMENT_NOT_SELECTED = '3003'

    class FilMap:
        CLOSED_YES = "Y"
        CLOSED_NO = "N"

    class Fields:
        # deal fields
        ID = 'ID'  # –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞
        CLOSED = 'CLOSED'  # –ó–∞–∫—Ä—ã—Ç–∞?
        DATE_CREATE = 'DATE_CREATE'  # –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
        SMALL_PHOTO = 'UF_CRM_1583265060'  # –§–æ—Ç–æ –±—É–∫–µ—Ç–∞
        BIG_PHOTO = 'UF_CRM_1583348851496'  # –§–æ—Ç–æ –±—É–∫–µ—Ç–∞ –±–æ–ª—å—à–æ–µ
        SUPPLY_METHOD = 'UF_CRM_1572419729488'  # –î–æ—Å—Ç–∞–≤–∫–∞ \ –°–∞–º–æ–≤—ã–≤–æ–∑
        CHECKLIST = 'UF_CRM_1587838059218'  # –§–æ—Ç–æ —á–µ–∫–ª–∏—Å—Ç–∞
        STAGE = 'STAGE_ID'  # –°—Ç–∞–¥–∏—è —Å–¥–µ–ª–∫–∏
        ORDER = 'UF_CRM_1572513138'  # –ß—Ç–æ –∑–∞–∫–∞–∑–∞–Ω–æ
        CONTACT = 'CONTACT_ID'  # –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ (–∫–ª–∏–µ–Ω—Ç)
        ORDER_RECEIVED_BY = 'UF_CRM_1625240260'  # –ö—Ç–æ –ø—Ä–∏–Ω—è–ª –∑–∞–∫–∞–∑ (–ø—Ä–∏–≤—è–∑–∫–∞ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É)
        TOTAL_SUM = 'OPPORTUNITY'  # –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏
        ORDER_OR_FORM = 'UF_CRM_1630074895761'  # –ó–∞–∫–∞–∑ –∏–ª–∏ –∑–∞—è–≤–∫–∞(—à–∫–æ–ª–∞, –≥–æ—Ä—à–µ—á–∫–∞, —Ñ–∏—Ç–æ–¥–∏–∑, —Å–≤–∞–¥–µ–±–Ω–æ–µ –æ—Ñ–æ—Ä–º)?
        PAYMENT_TYPE = 'UF_CRM_1572521912939'  # –¢–∏–ø –æ–ø–ª–∞—Ç—ã
        PAYMENT_METHOD = 'UF_CRM_1581955203244'  # –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
        PAYMENT_STATUS = 'UF_CRM_1582364078288'  # –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã
        PREPAID = 'UF_CRM_1581381796094'  # –ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞
        TO_PAY = 'UF_CRM_1572874675779'  # –ö –æ–ø–ª–∞—Ç–µ
        COURIER = 'UF_CRM_1577117931'  # –ö—É—Ä—å–µ—Ä (—Å—Ç–∞—Ä—ã–π, —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫)
        CLIENT_URL = 'UF_CRM_1592498133598'  # –°—Å—ã–ª–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞
        CLIENT_COMMENT = 'UF_CRM_1593363999625'  # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–ª–∏–µ–Ω—Ç–∞
        CLIENT_CALLMEBACK = 'UF_CRM_1593364122228'  # –ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É
        COMMENT_APPROVED = 'UF_CRM_1594140784155'  # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π - —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ
        DATE = 'UF_CRM_1572436074496'  # –î–∞—Ç–∞
        TIME = 'UF_CRM_1572436244600'  # –í—Ä–µ–º—è
        ADDRESS = 'UF_CRM_1572422724116'  # –ê–¥—Ä–µ—Å
        INCOGNITO = 'UF_CRM_5DAF18DCC292F'  # –ò–Ω–∫–æ–≥–Ω–∏—Ç–æ
        ORDER_COMMENT = 'UF_CRM_1572864792721'  # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ç–æ–≤–∞—Ä—É
        DELIVERY_COMMENT = 'UF_CRM_1573049555741'  # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ
        FLAT = 'UF_CRM_1572422787172'  # –ö–≤–∞—Ä—Ç–∏—Ä–∞
        FLORIST_NEW = 'UF_CRM_1614264167'  # –§–ª–æ—Ä–∏—Å—Ç –Ω–æ–≤—ã–π
        ORDER_TYPE = 'UF_CRM_1610634201578'  # –¢–∏–ø –∑–∞–∫–∞–∑–∞
        POSTCARD_TEXT = 'UF_CRM_1573050122374'  # –¢–µ–∫—Å—Ç –æ—Ç–∫—Ä—ã—Ç–∫–∏
        HAS_POSTCARD = 'UF_CRM_1625059428684'  # –ï—Å—Ç—å –ª–∏ –æ—Ç–∫—Ä—ã—Ç–∫–∞?
        POSTCARD_PHOTO = 'UF_CRM_1640434640'  # –§–æ—Ç–æ –æ—Ç–∫—Ä—ã—Ç–∫–∏
        ORDER_RESERVE = 'UF_CRM_1620936565099'  # –†–µ–∑–µ—Ä–≤ —Ç–æ–≤–∞—Ä–∞
        ORDER_RESERVE_NOT_NEEDED_APPROVE = 'UF_CRM_1638622666871'  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, —á—Ç–æ —Ä–µ–∑–µ—Ä–≤ –Ω–µ –Ω—É–∂–µ–Ω (–≥–æ—Ä—å–∫–∏–π —Ç–≤–∏–∫—Å –∏–Ω–∞—á–µ)
        ORDER_RESERVE_DESC = 'UF_CRM_1625410694838'  # –ß—Ç–æ –æ—Ç–ª–æ–∂–µ–Ω–æ
        ORDER_HAS_RESERVE = 'UF_CRM_1625834851636'  # –ï—Å—Ç—å —Ä–µ–∑–µ—Ä–≤?
        SUPPLY_DATETIME = 'UF_CRM_1628348038537'  # –î–∞—Ç–∞ –ø–æ—Å—Ç–∞–≤–∫–∏
        COURIER_NEW = 'UF_CRM_1632075413'  # –ö—É—Ä—å–µ—Ä (–ø—Ä–∏–≤—è–∑–∫–∞ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É)
        RECIPIENT_NAME = 'UF_CRM_5DAF18DD1755D'  # –ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        RECIPIENT_PHONE = 'UF_CRM_1572421180924'  # –¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        SUBDIVISION = 'UF_CRM_1612453867429'  # –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –∑–∞ –∑–∞–∫–∞–∑
        DISTRICT = 'UF_CRM_1572422285260'  # –†–∞–π–æ–Ω –¥–æ—Å—Ç–∞–≤–∫–∏
        TERMINAL_CHANGE = 'UF_CRM_1613572957078'  # –¢–µ—Ä–º–∏–Ω–∞–ª \ –°–¥–∞—á–∞ —Å
        CHANGE_SUM = 'UF_CRM_1613572999144'  # –°–¥–∞—á–∞ —Å (—Å—É–º–º–∞)
        SENDER_ID = 'UF_CRM_1636976353'  # –ö—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–∫–∞–∑? (–ø—Ä–∏–≤—è–∑–∫–∞ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É)
        EQUIPER_HANDLER_ID = 'UF_CRM_1636976653'  # –ö—Ç–æ —É–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞–ª –∑–∞–∫–∞–∑? (–ø—Ä–∏–≤—è–∑–∫–∞ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É)
        RESERVE_HANDLER_ID = 'UF_CRM_1640625045'  # –ö—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª —Ä–µ–∑–µ—Ä–≤/–ø–æ—Å—Ç–∞–≤–∫—É –∑–∞–∫–∞–∑? (–ø—Ä–∏–≤—è–∑–∫–∞ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É)
        FLORIST_SETTER_ID = 'UF_CRM_1644678959'  # –ö—Ç–æ –Ω–∞–∑–Ω–∞—á–∏–ª —Ñ–ª–æ—Ä–∏—Å—Ç–∞?
        SOURCE_ID = 'SOURCE_ID'  # –ò—Å—Ç–æ—á–Ω–∏–∫
        IS_LATE = 'UF_CRM_1631979755121'  # –ó–∞–∫–∞–∑ –æ–ø–æ–∑–¥–∞–ª
        IS_LATE_REASON = 'UF_CRM_1631979785526'  # –ü—Ä–∏—á–∏–Ω–∞ –æ–ø–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
        WAREHOUSE_RETURN_REASON = 'UF_CRM_1613565471434'  # –ü—Ä–∏—á–∏–Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ —Å–∫–ª–∞–¥, –∫–æ–º—É –∏ –∫—É–¥–∞ –æ—Ç–¥–∞–Ω
        WAREHOUSE_RETURNED = 'UF_CRM_1640240629788'  # –ó–∞–∫–∞–∑ –≤–µ—Ä–Ω—É–ª—Å—è –Ω–∞ —Å–∫–ª–∞–¥ (–¥–∞ \ –Ω–µ—Ç)
        LINK = 'UF_CRM_1581375809'  # –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–∫–∞–∑
        ASSIGNED = 'ASSIGNED_BY_ID'  # –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π

        URGENT_OR_ADVANCE = 'UF_CRM_1655464829758'  # –°—Ä–æ—á–Ω—ã–π/–ó–∞–±–ª–∞–≥–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π
        SALES_DEPARTAMENT = 'UF_CRM_1655465426062'  # –û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂ (–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ - –ø—Ä–æ–¥–∞–≤–µ—Ü)

        # festive Approvement
        FESTIVE_APPROVEMENT = 'UF_CRM_1646001150'  # –ü—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ (—Å–ø–∏—Å–æ–∫)
        FESTIVE_DECLINE_COMMENT = 'UF_CRM_1646163933'  # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—é
        FESTIVE_DECLINE_USER = 'UF_CRM_1646208854'  # –ö—Ç–æ –æ—Ç–∫–ª–æ–Ω–∏–ª
        FESTIVE_BOOL = "UF_CRM_1661526547"  # –ß—Ç–æ –±—ã —Å–º–µ–Ω–∏—Ç—å —Å—Ç–∞–¥–∏—é –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ –í–µ—Ä–æ–Ω–∏–∫–∏ –ï–≥–æ—Ä–æ–≤–æ–π!

    class ConstContact:
        # contact
        USER_NAME = 'NAME'
        CONTACT_PHONE = 'PHONE'
        CONTACT_HAS_PHONE = 'HAS_PHONE'

    class Buttons:
        PROCESS = InlineKeyboardButton("–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–∫–∞–∑ üëå", callback_data="deal_process")
        SET_FLORIST = InlineKeyboardButton("–ù–∞–∑–Ω–∞—á–∏—Ç—å —Ñ–ª–æ—Ä–∏—Å—Ç–∞ üë©‚Äçüåæ", callback_data="deal_set_florist")
        EQUIP_BUTTON = InlineKeyboardButton("–£–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑ üíê", callback_data="deal_equip")
        SEND = InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ (–Ω–∞–∑–Ω–∞—á–∏—Ç—å –∫—É—Ä—å–µ—Ä–∞) üöö", callback_data="deal_send")
        COURIER = InlineKeyboardButton("–ù–∞–∑–Ω–∞—á–∏—Ç—å –∫—É—Ä—å–µ—Ä–∞ (–∑–∞—Ä–∞–Ω–µ–µ) üë®‚Äçü¶º", callback_data="deal_courier")

    def __init__(self, deal: dict):
        self.photo_data = None
        self.photo_name = None

        self.florist_id = deal.get(self.Fields.FLORIST_NEW)
        self.florist = BW.BitrixUsers.fullname_by_bitrix_id(self.florist_id)

        self.courier_id = deal.get(self.Fields.COURIER_NEW)
        self.courier = BW.BitrixUsers.fullname_by_bitrix_id(self.courier_id)

        self.deal_id = deal.get(self.Fields.ID)  # –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞
        self.stage_id = deal.get(self.Fields.STAGE)
        self.stage_name = BW.Bitrix.data.stages.get(deal.get(self.Fields.STAGE))

        order = deal.get(self.Fields.ORDER)
        self.order = ", ".join(order) if order else None  # –ß—Ç–æ –∑–∞–∫–∞–∑–∞–Ω–æ

        contact_id = deal.get(self.Fields.CONTACT)  # –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ (–∫–ª–∏–µ–Ω—Ç)
        if contact_id:
            contact_data = BW.get_contact_data(contact_id)
            self.contact = contact_data.get(self.ConstContact.USER_NAME)
            self.contact_phone = contact_data.get(self.ConstContact.CONTACT_PHONE)
        else:
            self.contact, self.contact_phone = None, None

        order_received_by_id = deal.get(self.Fields.ORDER_RECEIVED_BY)
        # –ö—Ç–æ –ø—Ä–∏–Ω—è–ª –∑–∞–∫–∞–∑ (–ø—Ä–∏–≤—è–∑–∫–∞ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É)
        self.order_received_by = BW.BitrixUsers.fullname_by_bitrix_id(order_received_by_id)

        self.total_sum = deal.get(self.Fields.TOTAL_SUM)  # –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏

        # –¢–∏–ø –æ–ø–ª–∞—Ç—ã
        payment_type_id = deal.get(self.Fields.PAYMENT_TYPE)
        field = BW.Bitrix.data.fields.get(self.Fields.PAYMENT_TYPE)
        self.payment_type = field.get_name_item(payment_type_id) if field else None

        payment_method_id = deal.get(self.Fields.PAYMENT_METHOD)
        field = BW.Bitrix.data.fields.get(self.Fields.PAYMENT_METHOD)
        self.payment_method = field.get_name_item(payment_method_id) if field else None

        self.payment_status = deal.get(self.Fields.PAYMENT_STATUS)  # –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã
        self.prepaid = deal.get(self.Fields.PREPAID)  # –ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞
        self.to_pay = deal.get(self.Fields.TO_PAY)  # –ö –æ–ø–ª–∞—Ç–µ

        if deal.get(self.Fields.INCOGNITO) == '0':
            self.incognito = '–Ω–µ—Ç'
        elif deal.get(self.Fields.INCOGNITO) == '1':
            self.incognito = '–í–ù–ò–ú–ê–ù–ò–ï - –î–ê!'
        else:
            self.incognito = None
        self.order_comment = deal.get(self.Fields.ORDER_COMMENT)
        self.delivery_comment = deal.get(self.Fields.DELIVERY_COMMENT)

        self.order_type_id = deal.get(self.Fields.ORDER_TYPE)
        self.order_type = deal.get(self.order_type_id)

        field = BW.Bitrix.data.fields.get(self.Fields.SUPPLY_METHOD)
        self.supply_type = field.get_name_item(deal.get(self.Fields.SUPPLY_METHOD)) if field else None
        supply_datetime = deal.get(self.Fields.SUPPLY_DATETIME)
        self.supply_datetime = supply_datetime.replace("T", " ").replace("+03:00", "") if supply_datetime else None

        # –û—Ç–∫—Ä—ã—Ç–∫–∞
        has_postcard = deal.get(self.Fields.HAS_POSTCARD)
        if has_postcard == self.FilMapPostcardStage.DEAL_HAS_POSTCARD_YES:
            self.has_postcard = True
            self.postcard_text = deal.get(self.Fields.POSTCARD_TEXT)
        else:
            self.has_postcard = None
            self.postcard_text = None

        field = BW.Bitrix.data.fields.get(self.Fields.TIME)
        self.time = field.get_name_item(deal.get(self.Fields.TIME)) if field else None
        date = deal.get(self.Fields.DATE)
        self.date = re.match(r"\d{4}-\d{2}-\d{2}", date)[0] if date else date
        if deal.get(self.Fields.ORDER_RESERVE):
            self.order_reserve = [el['downloadUrl'] for el in deal.get(self.Fields.ORDER_RESERVE)]
        else:
            self.order_reserve = None
        self.reserve_desc = deal.get(self.Fields.ORDER_RESERVE_DESC)
        self.has_reserve = deal.get(self.Fields.ORDER_HAS_RESERVE) == self.FilMapReserve.RESERVE_YES

        self.recipient_name = deal.get(self.Fields.RECIPIENT_NAME)
        self.recipient_phone = deal.get(self.Fields.RECIPIENT_PHONE)
        address = deal.get(self.Fields.ADDRESS)
        self.address = re.match(r"([^|]+)|", address)[0] if address else None
        self.flat = deal.get(self.Fields.FLAT)
        field = BW.Bitrix.data.fields.get(self.Fields.SUBDIVISION)
        self.subdivision = field.get_name_item(deal.get(self.Fields.SUBDIVISION)) if field else None
        field = BW.Bitrix.data.fields.get(self.Fields.DISTRICT)
        self.district = field.get_name_item(deal.get(self.Fields.DISTRICT)) if field else None
        self.order_big_photos = []

        terminal_change = deal.get(self.Fields.TERMINAL_CHANGE)
        # –ù—É–∂–µ–Ω —Ç–µ—Ä–º–∏–Ω–∞–ª
        if terminal_change == self.FilMapPay.NEED_TERMINAL:
            self.terminal_needed = True
        else:
            self.terminal_needed = False

        # –ù—É–∂–Ω–∞ —Å–¥–∞—á–∞
        if terminal_change == self.FilMapPay.NEED_CHANGE:
            self.change_sum = deal.get(self.Fields.CHANGE_SUM)
        else:
            self.change_sum = None

        # –¢–æ—Ç, –∫—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–∫–∞–∑
        self.sender_id = deal.get(self.Fields.SENDER_ID)
        self.sender = BW.BitrixUsers.fullname_by_bitrix_id(self.sender_id)

        # –ò—Å—Ç–æ—á–Ω–∏–∫
        self.source_id = deal.get(self.Fields.SOURCE_ID)
        self.order_or_form = deal.get(self.Fields.ORDER_OR_FORM)
        self.urgent_or_advance = deal.get(self.Fields.URGENT_OR_ADVANCE)
        self.sales_department = deal.get(self.Fields.SALES_DEPARTAMENT)

    @staticmethod
    def str_value(key, value):
        field: BW.Field = BW.Bitrix.data.fields.get(key)
        if field:
            for item in field.items:
                if item['ID'] == value:
                    return item['VALUE']

    def __repr__(self):
        text = ""
        for k, v in self.__dict__.items():
            text += f"{k}: {v}\n"
        return text

    @classmethod
    def build(cls, deal_id):
        result = BW.get_deal(deal_id)
        if result:
            return cls(result)

    def update(self):
        result = BW.get_deal(self.deal_id)
        self.__init__(result)
